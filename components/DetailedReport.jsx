import React, { useState, useEffect } from 'react'
import {
  Box,
  Typography,
  Grid,
  Divider,
  Tab,
  Tabs,
  List,
  ListItem,
  ListItemText,
  Chip,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableRow,
  Accordion,
  AccordionSummary,
  AccordionDetails
} from '@mui/material'
import ExpandMoreIcon from '@mui/icons-material/ExpandMore'
import SecurityIcon from '@mui/icons-material/Security'
import BugReportIcon from '@mui/icons-material/BugReport'
import AssessmentIcon from '@mui/icons-material/Assessment'

const CURRENT_USER = 'Prateek-glitch'
const CURRENT_TIMESTAMP = '2025-07-12 19:47:00'

export default function DetailedReport({ scanId }) {
  const [scanData, setScanData] = useState(null)
  const [loading, setLoading] = useState(true)
  const [activeTab, setActiveTab] = useState(0)

  useEffect(() => {
    fetchScanDetails()
  }, [scanId])

  const fetchScanDetails = async () => {
    try {
      const response = await fetch(`/api/scan/scan-details/${scanId}`)
      const data = await response.json()
      setScanData(data)
    } catch (error) {
      console.error('Error fetching scan details:', error)
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <Box sx={{ bgcolor: '#2a2a2a', borderRadius: 2, p: 3 }}>
        <Typography sx={{ color: '#666' }}>Loading report...</Typography>
      </Box>
    )
  }

  if (!scanData) {
    return (
      <Box sx={{ bgcolor: '#2a2a2a', borderRadius: 2, p: 3 }}>
        <Typography sx={{ color: '#666' }}>No scan data found</Typography>
      </Box>
    )
  }

  const insights = JSON.parse(scanData.llm_insights)

  return (
    <Box sx={{ bgcolor: '#2a2a2a', borderRadius: 2, p: 3 }}>
      {/* Header */}
      <Box sx={{ mb: 4 }}>
        <Typography variant="h5" sx={{ color: 'white', mb: 3 }}>
          Detailed Scan Report
        </Typography>
        <Grid container spacing={2}>
          <Grid item xs={12} md={6}>
            <Typography sx={{ color: '#bbb', mb: 1 }}>
              <strong>Target:</strong> {scanData.target_url}
            </Typography>
            <Typography sx={{ color: '#bbb' }}>
              <strong>Scan ID:</strong> {scanData.id}
            </Typography>
          </Grid>
          <Grid item xs={12} md={6}>
            <Typography sx={{ color: '#bbb', mb: 1 }}>
              <strong>Scan Date:</strong> {scanData.timestamp}
            </Typography>
            <Typography sx={{ color: '#bbb' }}>
              <strong>Generated by:</strong> {CURRENT_USER}
            </Typography>
          </Grid>
        </Grid>
      </Box>

      {/* Navigation Tabs */}
      <Tabs
        value={activeTab}
        onChange={(e, newValue) => setActiveTab(newValue)}
        sx={{
          mb: 3,
          '& .MuiTab-root': {
            color: '#666',
            '&.Mui-selected': {
              color: 'white'
            }
          },
          '& .MuiTabs-indicator': {
            backgroundColor: 'white'
          }
        }}
      >
        <Tab 
          icon={<AssessmentIcon />} 
          label="Overview" 
          sx={{ textTransform: 'none' }}
        />
        <Tab 
          icon={<BugReportIcon />} 
          label="Vulnerabilities" 
          sx={{ textTransform: 'none' }}
        />
        <Tab 
          icon={<SecurityIcon />} 
          label="Raw Data" 
          sx={{ textTransform: 'none' }}
        />
      </Tabs>

      {/* Overview Tab */}
      {activeTab === 0 && (
        <Box sx={{ bgcolor: '#1a1a1a', borderRadius: 1, p: 3 }}>
          <Typography variant="h6" sx={{ color: 'white', mb: 2 }}>
            Executive Summary
          </Typography>
          <Typography sx={{ color: '#bbb', mb: 3 }}>
            {insights.summary}
          </Typography>
          <Divider sx={{ bgcolor: '#333', my: 3 }} />
          <Typography variant="h6" sx={{ color: 'white', mb: 2 }}>
            Key Findings
          </Typography>
          <List>
            {insights.keyPoints.map((point, index) => (
              <ListItem key={index}>
                <ListItemText 
                  primary={point} 
                  sx={{ 
                    '& .MuiListItemText-primary': { 
                      color: '#bbb' 
                    } 
                  }} 
                />
              </ListItem>
            ))}
          </List>
        </Box>
      )}

      {/* Vulnerabilities Tab */}
      {activeTab === 1 && (
        <Box>
          {insights.vulnerabilities.map((vuln, index) => (
            <Accordion 
              key={index} 
              sx={{
                bgcolor: '#1a1a1a',
                color: 'white',
                mb: 2,
                '&:before': {
                  display: 'none'
                }
              }}
            >
              <AccordionSummary 
                expandIcon={<ExpandMoreIcon sx={{ color: 'white' }} />}
                sx={{
                  '&:hover': {
                    bgcolor: '#222'
                  }
                }}
              >
                <Grid container alignItems="center" spacing={2}>
                  <Grid item>
                    <Typography sx={{ color: 'white' }}>
                      {vuln.vulnerability}
                    </Typography>
                  </Grid>
                  <Grid item>
                    <Chip
                      label={vuln.severity}
                      size="small"
                      sx={{
                        bgcolor: 
                          vuln.severity === 'Critical' ? '#ff1744' :
                          vuln.severity === 'High' ? '#f57c00' :
                          vuln.severity === 'Medium' ? '#ffb74d' : '#757575',
                        color: 'white'
                      }}
                    />
                  </Grid>
                </Grid>
              </AccordionSummary>
              <AccordionDetails>
                <TableContainer>
                  <Table>
                    <TableBody>
                      <TableRow>
                        <TableCell 
                          component="th" 
                          scope="row" 
                          sx={{ 
                            color: '#666',
                            borderColor: '#333',
                            width: '200px'
                          }}
                        >
                          <strong>Risk Level</strong>
                        </TableCell>
                        <TableCell sx={{ color: '#bbb', borderColor: '#333' }}>
                          {vuln.riskLevel}
                        </TableCell>
                      </TableRow>
                      <TableRow>
                        <TableCell 
                          component="th" 
                          scope="row"
                          sx={{ color: '#666', borderColor: '#333' }}
                        >
                          <strong>Occurrence</strong>
                        </TableCell>
                        <TableCell sx={{ color: '#bbb', borderColor: '#333' }}>
                          {vuln.occurrence}
                        </TableCell>
                      </TableRow>
                      <TableRow>
                        <TableCell 
                          component="th" 
                          scope="row"
                          sx={{ color: '#666', borderColor: '#333' }}
                        >
                          <strong>Cause</strong>
                        </TableCell>
                        <TableCell sx={{ color: '#bbb', borderColor: '#333' }}>
                          {vuln.cause}
                        </TableCell>
                      </TableRow>
                      <TableRow>
                        <TableCell 
                          component="th" 
                          scope="row"
                          sx={{ color: '#666', borderColor: '#333' }}
                        >
                          <strong>Remediation</strong>
                        </TableCell>
                        <TableCell sx={{ color: '#bbb', borderColor: '#333' }}>
                          {vuln.remediation}
                        </TableCell>
                      </TableRow>
                      {vuln.cve && (
                        <TableRow>
                          <TableCell 
                            component="th" 
                            scope="row"
                            sx={{ color: '#666', borderColor: '#333' }}
                          >
                            <strong>CVE</strong>
                          </TableCell>
                          <TableCell sx={{ color: '#bbb', borderColor: '#333' }}>
                            {vuln.cve}
                          </TableCell>
                        </TableRow>
                      )}
                      {vuln.references && vuln.references.length > 0 && (
                        <TableRow>
                          <TableCell 
                            component="th" 
                            scope="row"
                            sx={{ color: '#666', borderColor: '#333' }}
                          >
                            <strong>References</strong>
                          </TableCell>
                          <TableCell sx={{ color: '#bbb', borderColor: '#333' }}>
                            <List>
                              {vuln.references.map((ref, idx) => (
                                <ListItem key={idx}>
                                  <a 
                                    href={ref} 
                                    target="_blank" 
                                    rel="noopener noreferrer"
                                    style={{ color: '#2196f3' }}
                                  >
                                    {ref}
                                  </a>
                                </ListItem>
                              ))}
                            </List>
                          </TableCell>
                        </TableRow>
                      )}
                    </TableBody>
                  </Table>
                </TableContainer>
              </AccordionDetails>
            </Accordion>
          ))}
        </Box>
      )}

      {/* Raw Data Tab */}
      {activeTab === 2 && (
        <Box sx={{ bgcolor: '#1a1a1a', borderRadius: 1, p: 3 }}>
          <Typography variant="h6" sx={{ color: 'white', mb: 2 }}>
            Raw Scan Output
          </Typography>
          <Box
            sx={{
              bgcolor: '#000',
              color: '#bbb',
              p: 2,
              borderRadius: 1,
              maxHeight: '500px',
              overflow: 'auto',
              fontFamily: 'monospace'
            }}
          >
            <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>
              {scanData.scan_output}
            </pre>
          </Box>
        </Box>
      )}
    </Box>
  )
}